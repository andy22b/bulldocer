sub m5rapars (dep,delta,iph,alph2,beta2,rapar,ptoa) static
'--- subroutine to get ray parameter
'         DEP = source depth
'         DELTA = epicentral distance
'         IPH = phase
'         ALPH2, BETA2 = source P and S velocities 
'         RAPAR = ray parameter
'         PTOA = source takeoff angle
'   
      idel=int(2*delta)-49
      idel=fnxlimit(idel,1,149)
      if iph=1 then vel=alph2 else vel=beta2

      call rayp(idel,1,iph,p0)
      call rayp(idel+1,1,iph,p2) : p2=p2-p0
      call rayp(idel,2,iph,p3)   : p3=p3-p0
      call rayp(idel+1,2,iph,p4) : p4=p4-p0

' following correction contributed by Andrew Smith,Bullard Labs,Cambridge,UK
      ddel= 2. * delta-(49. + idel) 'corrected 11/4/92 by AS
      ddep=(dep/160.)
      rapar = p0+ p2*ddel + p3*ddep + (p4-p2-p3)*ddel*ddep
      ptoa = fnasin(rapar*vel)
end sub

sub rayp(i,j,iph,rpjb) static

dim rpjb$(3,2,2)

'-- Jeffreys-Bullen P-wave ray parameters stored as 4-digit integers, in sec/degree*100
'--   delta - 25 to 99.5 degrees at 0.5 degree increments 

'-- these are stored in strings of 50 values each
'-- depth=0
rpjb$(1,1,1)=" 953 942 932 923 916 911 906 902 899 896 890 884 881 878 875 872 870 868 864 860 855 850 846 843 841"+_
             " 840 839 837 834 830 826 823 821 820 819 818 815 812 809 806 800 795 792 790 788 785 780 774 771 768"
rpjb$(2,1,1)=" 765 762 760 757 753 748 742 737 735 734 729 723 720 716 710 704 701 698 694 690 686 682 679 676 670"+_
             " 664 661 658 654 650 646 642 640 638 634 630 625 620 616 612 610 608 604 600 595 590 586 582 580 578"
rpjb$(3,1,1)=" 574 570 565 560 556 552 550 548 544 540 535 530 526 522 520 518 514 510 506 502 500 498 494 490 486"+_
             " 482 480 478 474 470 466 463 461 460 460 460 460 460 460 460 459 458 455 452 451 451 451 451 451 451"
'-- depth= 160 km
rpjb$(1,2,1)=" 935 928 921 914 910 906 900 894 891 888 884 880 875 870 865 860 856 852 850 848 845 842 841 840 839"+_
             " 837 834 830 826 823 821 820 819 817 814 810 806 802 800 798 794 790 786 782 780 778 774 770 766 762"
rpjb$(2,2,1)=" 760 758 754 750 745 740 736 732 730 727 723 718 711 705 702 700 698 695 690 684 681 678 674 670 665"+_
             " 660 656 652 650 648 644 640 635 630 625 620 616 612 610 608 604 600 596 592 590 588 584 580 575 570"
rpjb$(3,2,1)=" 566 562 560 558 554 550 546 542 540 538 534 530 525 520 515 510 506 502 500 498 494 490 486 482 480"+_
             " 478 475 472 471 470 469 468 465 462 460 458 456 454 455 456 455 454 455 456 455 454 454 454 454 454"

'-- Jeffreys-Bullen S-wave ray parameters stored as 4-digit integers, in sec/degree*100
'--   delta - 25 to 99.5 degrees at 0.5 degree increments 

'-- depth=0
rpjb$(1,1,2)="1688167316591646163216191612160715991591158515781571156515611558155515521551155015481545154015341530"+_
             "1526152015141510150614991492148614801474146814611454145014461440143414301426142014141410140613991392"
rpjb$(2,1,2)="1387138213791376137013641360135613501344134013361330132413211318131313071300129212861280127512701265"+_
             "1260125412481241123412301226121912121206120011951190118511801174116811601152114511381131112411201116"
rpjb$(3,1,2)="110911021096109010851080107410681060105210461040103510301024101810101002 995 988 980 972 965 958 950"+_
             " 942 936 930 923 916 906 897 891 887 880 874 870 866 860 855 852 850 849 848 845 842 841 840 840 840"
'-- depth= 160 km
rpjb$(1,2,2)="1663165016371625161616081599159015821575157115681565156115591556155015441541153815341530152615221519"+_
             "1515150915021496149014841478147114651461145814531447144014331427142214191416141014041400139613901384"
rpjb$(2,2,2)="1380137613701364136013561350134413411338133313281321131513111308130312971290128212761270126512601255"+_
             "1250124512401235123012241218121012021196119011851180117411681160115211461140113511301124111811111104"
rpjb$(3,2,2)="11001096108910821076107010651060105410481040103210261020101410081000 992 985 978 970 962 956 950 944"+_
             " 938 930 922 915 908 900 892 886 880 875 870 865 860 856 853 851 850 849 847 844 840 836 834 833 833"

'--- get value

  i1=int(i/50.1)+1           'which element
  j1= ( (i-1) mod 50 )*4 +1
  rpjb=val(mid$(rpjb$(i1,j,iph),j1,4))/11111.9   '   convert to sec/km

end sub
